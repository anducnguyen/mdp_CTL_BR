mdp
const double alf=0.8;
// UAV MODEL
module uav

    s : [1..16] init 1;
    a:[1..4] init 1;

[] s=1 & a=1 -> alf:(s'=2) + (1-alf)/2:(s'=1) +(1-alf)/2:(s'=1);

[] s=1 & a=2 -> (s'=1);

[] s=1 & a=3 -> alf:(s'=5) + (1-alf)/2:(s'=6) +(1-alf)/2:(s'=1);

[] s=1 & a=4 -> (s'=1);

[] s=2 & a=1 -> alf:(s'=3) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=2);

[] s=2 & a=2 -> alf:(s'=1) + (1-alf)/2:(s'=2) +(1-alf)/2:(s'=5);

[] s=2 & a=3 -> alf:(s'=6) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=5);

[] s=2 & a=4 -> (s'=2);

[] s=3 & a=1 -> alf:(s'=4) + (1-alf)/2:(s'=3) +(1-alf)/2:(s'=8);

[] s=3 & a=2 -> alf:(s'=2) + (1-alf)/2:(s'=6) +(1-alf)/2:(s'=3);

[] s=3 & a=3 -> alf:(s'=7) + (1-alf)/2:(s'=8) +(1-alf)/2:(s'=6);

[] s=3 & a=4 -> (s'=3);

[] s=4 & a=1 -> (s'=4);

[] s=4 & a=2 -> alf:(s'=3) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=4);

[] s=4 & a=3 -> alf:(s'=8) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=4);

[] s=4 & a=4 -> (s'=4);

[] s=5 & a=1 -> alf:(s'=6) + (1-alf)/2:(s'=2) +(1-alf)/2:(s'=10);

[] s=5 & a=2 -> (s'=5);

[] s=5 & a=3 -> alf:(s'=9) + (1-alf)/2:(s'=10) +(1-alf)/2:(s'=5);

[] s=5 & a=4 -> alf:(s'=9) + (1-alf)/2:(s'=10) +(1-alf)/2:(s'=5);

[] s=6 & a=1 -> alf:(s'=7) + (1-alf)/2:(s'=3) +(1-alf)/2:(s'=11);

[] s=6 & a=2 -> alf:(s'=5) + (1-alf)/2:(s'=1) +(1-alf)/2:(s'=9);

[] s=6 & a=3 -> alf:(s'=10) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=9);

[] s=6 & a=4 -> alf:(s'=2) + (1-alf)/2:(s'=1) +(1-alf)/2:(s'=3);

[] s=7 & a=1 -> 0.95:(s'=8) + 0.05:(s'=7);

[] s=8 & a=2 -> alf:(s'=7) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=5);

[] s=8 & a=3 -> alf:(s'=12) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=8);

[] s=8 & a=4 -> alf:(s'=4) + (1-alf)/2:(s'=3) +(1-alf)/2:(s'=8);

[] s=9 & a=1 -> alf:(s'=10) + (1-alf)/2:(s'=6) +(1-alf)/2:(s'=14);

[] s=9 & a=2 -> (s'=9);

[] s=9 & a=3 -> alf:(s'=13) + (1-alf)/2:(s'=14) +(1-alf)/2:(s'=9);

[] s=9 & a=4 -> alf:(s'=5) + (1-alf)/2:(s'=6) +(1-alf)/2:(s'=9);

[] s=10 & a=1 -> (s'=10);

[] s=11 & a=1 -> (s'=11);

[] s=12 & a=1 -> (s'=12);

[] s=12 & a=2 -> alf:(s'=11) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=15);

[] s=12 & a=3 -> alf:(s'=16) + (1-alf)/2:(s'=15) +(1-alf)/2:(s'=12);

[] s=12 & a=4 -> alf:(s'=8) + (1-alf)/2:(s'=7) +(1-alf)/2:(s'=12);

[] s=13 & a=1 -> alf:(s'=14) + (1-alf)/2:(s'=10) +(1-alf)/2:(s'=13);

[] s=13 & a=2 -> (s'=13);

[] s=13 & a=3 -> (s'=13);

[] s=13 & a=4 -> alf:(s'=9) + (1-alf)/2:(s'=10) +(1-alf)/2:(s'=13);

[] s=14 & a=1 -> alf:(s'=15) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=14);

[] s=14 & a=2 -> alf:(s'=13) + (1-alf)/2:(s'=9) +(1-alf)/2:(s'=14);

[] s=14 & a=3 -> (s'=14);

[] s=14 & a=4 -> alf:(s'=10) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=9);

[] s=15 & a=1 -> alf:(s'=16) + (1-alf)/2:(s'=12) +(1-alf)/2:(s'=15);

[] s=15 & a=2 -> alf:(s'=14) + (1-alf)/2:(s'=10) +(1-alf)/2:(s'=15);

[] s=15 & a=3 -> (s'=15);

[] s=15 & a=4 -> alf:(s'=11) + (1-alf)/2:(s'=12) +(1-alf)/2:(s'=10);

[] s=16 & a=1 -> (s'=16);

[] s=16 & a=2 -> alf:(s'=15) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=16);

[] s=16 & a=3 -> (s'=16);

[] s=16 & a=4 -> alf:(s'=12) + (1-alf)/2:(s'=11) +(1-alf)/2:(s'=16);

endmodule
